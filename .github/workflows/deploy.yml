# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deploy

on:
  push:
    branches:
      - develop
      - "ai-*"
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build .\MyCv.sln --configuration Release

      - name: dotnet publish
        run: dotnet publish .\ui\MyCv.UI\MyCv.UI.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Detect target environment
        id: detect
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
              echo "env=prerelease" >> $GITHUB_OUTPUT
              echo "webapp=valerianverona-dev" >> $GITHUB_OUTPUT
            else
              echo "env=production" >> $GITHUB_OUTPUT
              echo "webapp=valerianverona" >> $GITHUB_OUTPUT
            fi
          else
            echo "env=development" >> $GITHUB_OUTPUT
            echo "webapp=valerianverona-dev" >> $GITHUB_OUTPUT
          fi

      - name: Login to Azure
        uses: azure/login@v2
        environment: {{ steps.detect.outputs.env }}
        with:
          client-id: ${{ steps.detect.outputs.env == 'production' && secrets.AZUREAPPSERVICE_CLIENTID_AFF467EF286D4DB38E4DD17C46E727D3 || steps.detect.outputs.env == 'prerelease' && secrets.AZUREAPPSERVICE_CLIENTID_23A04D24B4224724895068CC64EF1B48 || secrets.AZUREAPPSERVICE_CLIENTID_23A04D24B4224724895068CC64EF1B48 }}
          tenant-id: ${{ steps.detect.outputs.env == 'production' && secrets.AZUREAPPSERVICE_TENANTID_A48EDFAE81144F4790E624F2B551B108 || steps.detect.outputs.env == 'prerelease' && secrets.AZUREAPPSERVICE_TENANTID_A307F732A95F470C98B3194C6536BF78 || secrets.AZUREAPPSERVICE_TENANTID_A307F732A95F470C98B3194C6536BF78 }}
          subscription-id: ${{ steps.detect.outputs.env == 'production' && secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6B03DE7FC98F48079B565A990EB4DE51 || steps.detect.outputs.env == 'prerelease' && secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_00CD1132FB35471487D980E6F3663C56 || secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_00CD1132FB35471487D980E6F3663C56 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ steps.detect.outputs.webapp }}
          slot-name: 'Production'
          package: .
