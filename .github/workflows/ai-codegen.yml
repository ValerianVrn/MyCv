name: AI update

on:
  issues:
    types: [labeled]

permissions:
  contents: write
  issues: read

jobs:
  aider:
    if: contains(github.event.label.name, 'ai')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Aider
        run: python -m pip install --upgrade --no-cache-dir aider-chat

      - name: Get issue body as instruction
        id: issue
        run: |
          echo "instruction<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.issue.body }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create branch
        id: create_branch
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number || 'manual' }}
          BRANCH="ai-issue-${ISSUE_NUMBER}-$(date +%s)"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -b "$BRANCH"

      - name: Configure git for commits
        run: |
          git config --global user.name "AI"
          git config --global user.email "ValerianVrn@users.noreply.github.com"
          
      - name: Run Aider with DeepSeek instruction
        env:
          OPENROUTER_DEEPSEEK_API_KEY: ${{ secrets.OPENROUTER_DEEPSEEK_API_KEY }}
        run: |
          aider --yes \
            --model openrouter/deepseek/deepseek-chat-v3.1:free \
            --api-key openrouter=$OPENROUTER_DEEPSEEK_API_KEY \
            --message "$instruction"


      - name: Debug git state after Aider
        run: |
          echo "PWD: $(pwd)"
          echo "Current branch:"
          git branch --show-current || echo "no branch (detached)"
          echo "HEAD ref:"
          git rev-parse --verify HEAD
          echo "Last 10 commits:"
          git log --oneline -n 10
          echo "Git status:"
          git status --porcelain --branch
          echo "List repo root:"
          ls -la

      - name: Ensure changes are committed (safe)
        run: |
          git add -A
          # if there are changes, commit; otherwise print a note
          if git diff --staged --quiet && git diff --quiet; then
            echo "No changes to commit"
          else
            git commit -m "feat: make nav drawer responsive with MudBlazor capabilities" || true
          fi
          
      - name: Push branch
        run: |
          git push --set-upstream origin HEAD:${{ steps.create_branch.outputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Verify pushed branch on remote
        run: |
          git fetch origin
          git log origin/${{ steps.create_branch.outputs.branch }} -n 5 --oneline
    
      - name: Open Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "AI Changes from Issue #${{ github.event.issue.number }}"
          body: "Automated changes generated by Aider using instruction from issue #${{ github.event.issue.number }}"
          branch: ${{ steps.create_branch.outputs.branch }}
          base: develop
